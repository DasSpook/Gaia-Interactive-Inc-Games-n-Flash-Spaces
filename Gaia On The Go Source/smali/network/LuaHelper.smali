.class public Lnetwork/LuaHelper;
.super Ljava/lang/Object;
.source "LuaHelper.java"


# static fields
.field private static final luaCode:Ljava/lang/String; = "----------------------------------------------------------------------------------------------- \t\t\n-- Helper functions that are called from the Lua extension \t\t\t\t\t\t\t\t\t\t\t\n-- \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nlocal function DEBUG(...) \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t-- print(\"DEBUG (helper) \" .. string.format(unpack(arg))) \t\t\t\t\t\t\t\t\t\t\nend \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nfunction _network_pathForFile(filename, baseDirectory) \t\t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tDEBUG(\"filename type: %s, value: %s\", type(filename), tostring(filename)) \t\t\t\t\t\t\n\tDEBUG(\"baseDirectory type: %s, value: %s\", type(baseDirectory), tostring(baseDirectory)) \t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tlocal path = system.pathForFile(filename, baseDirectory) \t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tDEBUG(\"path: %s\", path) \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tlocal isResourceFile = (( null == baseDirectory ) or ( system.ResourceDirectory == baseDirectory )) \n\tDEBUG(\"Is resource file: %s\", tostring(isResourceFile)) \t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\treturn path, isResourceFile \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nend \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n----------------------------------------------------------------------------------------------- \t\t\n-- Functions implemented in Lua and registered into the asyncHttp module namespace \t\t\t\t\t\n-- \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n-- download( url, method, listener [, params], filename [, baseDirectory] ) \t\t\t\t\t\t\t\n-- \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nfunction network.download( url, method, listener, params, filename, baseDirectory ) \t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tif ( \"string\" == type( params ) ) then \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t-- Optional params table omitted, shift params values right \t\t\t\t\t\t\t\t\t\n\t\tbaseDirectory = filename \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tfilename = params \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tparams = nil \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tend \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tlocal params = params or {} \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tif (params.progress) then\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tparams.progress = \"download\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\telse\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tparams.progress = nil \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tend\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tparams.response = params.response or {} \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tparams.response.filename = filename \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tif (baseDirectory == nil) then\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tbaseDirectory = system.DocumentsDirectory\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\telseif (baseDirectory ~= system.DocumentsDirectory and\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\tbaseDirectory ~= system.CachesDirectory and\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\tbaseDirectory ~= system.TemporaryDirectory) then\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tbaseDirectory = system.DocumentsDirectory\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tprint( \"WARNING: invalid baseDirectory supplied, defaulting to system.DocumentsDirectory\")\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tend\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tparams.response.baseDirectory = baseDirectory \t\t\t\t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\treturn network.request( url, method, listener, params ) \t\t\t\t\t\t\t\t\t\t\t\nend \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n-- upload( url, method, listener [, params], filename [, baseDirectory] [, contentType] ) \t\t\t\t\n-- \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nfunction network.upload( url, method, listener, params, filename, baseDirectory, contentType ) \t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tif ( \"string\" == type( params ) ) then \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t-- Optional params table omitted, shift param values right \t\t\t\t\t\t\t\t\t\t\n\t\tcontentType = baseDirectory \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tbaseDirectory = filename \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tfilename = params \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tparams = nil \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tend \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tif ( \"string\" == type( baseDirectory ) ) then \t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t-- Optional baseDirectory omitted, shift params values right \t\t\t\t\t\t\t\t\t\n\t\tcontentType = baseDirectory \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tbaseDirectory = nil \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tend \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tlocal params = params or {} \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tif (params.progress) then\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tparams.progress = \"upload\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\telse\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tparams.progress = nil \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tend\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tparams.body = params.body or {} \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tparams.body.filename = filename \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tparams.body.baseDirectory = baseDirectory \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tif ( contentType ) then \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tparams.headers = params.headers or {} \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tparams.headers[\"Content-Type\"] = contentType \t\t\t\t\t\t\t\t\t\t\t\t\t\n\tend \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\treturn network.request( url, method, listener, params ) \t\t\t\t\t\t\t\t\t\t\t\nend \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n-- network.canDetectNetworkStatusChanges\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n-- Default is false. Since \'nil\' evaluates to false, we don\'t need to explicitly set it.\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n-- network.setStatusListener()\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n-- Default implementation is a no-op\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nfunction network.setStatusListener()\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tprint( \"WARNING: network.setStatusListener() is not supported on this platform\" )\t\t\t\t\t\nend\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n"


# direct methods
.method public constructor <init>()V
    .locals 0

    .prologue
    .line 13
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method public static loadLuaHelper(Lcom/naef/jnlua/LuaState;)Ljava/lang/Boolean;
    .locals 3
    .param p0, "luaState"    # Lcom/naef/jnlua/LuaState;

    .prologue
    const/4 v2, 0x0

    .line 131
    const-string v0, "Loading Lua helper"

    new-array v1, v2, [Ljava/lang/Object;

    invoke-static {v0, v1}, Lnetwork/NetworkRequest;->debug(Ljava/lang/String;[Ljava/lang/Object;)V

    .line 132
    const-string v0, "----------------------------------------------------------------------------------------------- \t\t\n-- Helper functions that are called from the Lua extension \t\t\t\t\t\t\t\t\t\t\t\n-- \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nlocal function DEBUG(...) \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t-- print(\"DEBUG (helper) \" .. string.format(unpack(arg))) \t\t\t\t\t\t\t\t\t\t\nend \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nfunction _network_pathForFile(filename, baseDirectory) \t\t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tDEBUG(\"filename type: %s, value: %s\", type(filename), tostring(filename)) \t\t\t\t\t\t\n\tDEBUG(\"baseDirectory type: %s, value: %s\", type(baseDirectory), tostring(baseDirectory)) \t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tlocal path = system.pathForFile(filename, baseDirectory) \t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tDEBUG(\"path: %s\", path) \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tlocal isResourceFile = (( null == baseDirectory ) or ( system.ResourceDirectory == baseDirectory )) \n\tDEBUG(\"Is resource file: %s\", tostring(isResourceFile)) \t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\treturn path, isResourceFile \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nend \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n----------------------------------------------------------------------------------------------- \t\t\n-- Functions implemented in Lua and registered into the asyncHttp module namespace \t\t\t\t\t\n-- \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n-- download( url, method, listener [, params], filename [, baseDirectory] ) \t\t\t\t\t\t\t\n-- \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nfunction network.download( url, method, listener, params, filename, baseDirectory ) \t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tif ( \"string\" == type( params ) ) then \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t-- Optional params table omitted, shift params values right \t\t\t\t\t\t\t\t\t\n\t\tbaseDirectory = filename \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tfilename = params \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tparams = nil \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tend \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tlocal params = params or {} \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tif (params.progress) then\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tparams.progress = \"download\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\telse\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tparams.progress = nil \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tend\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tparams.response = params.response or {} \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tparams.response.filename = filename \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tif (baseDirectory == nil) then\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tbaseDirectory = system.DocumentsDirectory\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\telseif (baseDirectory ~= system.DocumentsDirectory and\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\tbaseDirectory ~= system.CachesDirectory and\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\tbaseDirectory ~= system.TemporaryDirectory) then\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tbaseDirectory = system.DocumentsDirectory\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tprint( \"WARNING: invalid baseDirectory supplied, defaulting to system.DocumentsDirectory\")\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tend\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tparams.response.baseDirectory = baseDirectory \t\t\t\t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\treturn network.request( url, method, listener, params ) \t\t\t\t\t\t\t\t\t\t\t\nend \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n-- upload( url, method, listener [, params], filename [, baseDirectory] [, contentType] ) \t\t\t\t\n-- \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nfunction network.upload( url, method, listener, params, filename, baseDirectory, contentType ) \t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tif ( \"string\" == type( params ) ) then \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t-- Optional params table omitted, shift param values right \t\t\t\t\t\t\t\t\t\t\n\t\tcontentType = baseDirectory \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tbaseDirectory = filename \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tfilename = params \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tparams = nil \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tend \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tif ( \"string\" == type( baseDirectory ) ) then \t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t-- Optional baseDirectory omitted, shift params values right \t\t\t\t\t\t\t\t\t\n\t\tcontentType = baseDirectory \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tbaseDirectory = nil \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tend \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tlocal params = params or {} \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tif (params.progress) then\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tparams.progress = \"upload\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\telse\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tparams.progress = nil \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tend\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tparams.body = params.body or {} \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tparams.body.filename = filename \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tparams.body.baseDirectory = baseDirectory \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tif ( contentType ) then \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tparams.headers = params.headers or {} \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tparams.headers[\"Content-Type\"] = contentType \t\t\t\t\t\t\t\t\t\t\t\t\t\n\tend \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\treturn network.request( url, method, listener, params ) \t\t\t\t\t\t\t\t\t\t\t\nend \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n-- network.canDetectNetworkStatusChanges\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n-- Default is false. Since \'nil\' evaluates to false, we don\'t need to explicitly set it.\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n-- network.setStatusListener()\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n-- Default implementation is a no-op\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nfunction network.setStatusListener()\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tprint( \"WARNING: network.setStatusListener() is not supported on this platform\" )\t\t\t\t\t\nend\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n"

    const-string v1, "=simple"

    invoke-virtual {p0, v0, v1}, Lcom/naef/jnlua/LuaState;->load(Ljava/lang/String;Ljava/lang/String;)V

    .line 135
    invoke-virtual {p0, v2, v2}, Lcom/naef/jnlua/LuaState;->call(II)V

    .line 137
    const-string v0, "Lua helper module loaded"

    new-array v1, v2, [Ljava/lang/Object;

    invoke-static {v0, v1}, Lnetwork/NetworkRequest;->debug(Ljava/lang/String;[Ljava/lang/Object;)V

    .line 139
    const/4 v0, 0x1

    invoke-static {v0}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v0

    return-object v0
.end method
